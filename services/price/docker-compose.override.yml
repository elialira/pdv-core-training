version: '3.6'
services:
  price-service:
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - RABBITMQCONNECTION=amqp://test:test@rabbitmq:5672
      - EVENTSTORECONNECTION=tcp://eventstore:1113
    depends_on:
      - rabbitmq
      - eventstore
      - readstore
    networks: 
      - price-service-network
    ports:
      - "5000:80"
      - "5001:443"

  rabbitmq:
    image: "rabbitmq:3-management"
    environment:
      RABBITMQ_DEFAULT_USER: "test"
      RABBITMQ_DEFAULT_PASS: "test"
    ports:
      - "15672:15672"
      - "5672:5672"
    networks: 
      - price-service-network
      
  eventstore:
    image: eventstore/eventstore:release-5.0.1
    ports:
      - "2113:2113"
      - "1113:1113"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:2113/stats || exit 1"]
      interval: 5s
      timeout: 2s
    environment:
      - EVENTSTORE_RUN_PROJECTIONS=all
      - EVENTSTORE_START_STANDARD_PROJECTIONS=TRUE
    networks: 
      - price-service-network
            
  readstore:
    image: postgres:10.6-alpine
    environment:
      - POSTGRES_DB=testdb
      - POSTGRES_USER=dbadmin
      - POSTGRES_PASSWORD=dbadmin
    command:
      - -c
      - max_prepared_transactions=100
    networks: 
      - price-service-network  
    ports:
      - "5433:5432"

networks:
  price-service-network: